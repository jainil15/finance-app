package views

import "financeapp/pkg/model"
import "fmt"
import "financeapp/aggregate"
import "financeapp/domain/transaction"
import "financeapp/web/components/forms"

templ UserTransaction(t aggregate.Transaction) {
	<div class="">
		{ t.Category.Name.String() }
	</div>
}

func TransactionSum(tran []aggregate.Transaction) float64 {
	sum := 0.0
	for _, t := range tran {
		if t.Transaction.TransactionType == transaction.Expense {
			sum += float64(t.Transaction.Value)
		} else {
			sum -= float64(t.Transaction.Value)
		}
	}
	return sum
}

templ UserBudgetStat(u model.UserAggregate) {
	<div class="stats shadow">
		<div class="stat">
			<div class="stat-title">Total Budget Left</div>
			<div class={ "stat-value", templ.KV("text-success", float64(u.Budget.Value) - TransactionSum(u.Transaction) > 0), templ.KV("text-error", float64(u.Budget.Value) - TransactionSum(u.Transaction) < 0) }>{ fmt.Sprintf("%.2f left", float64(u.Budget.Value) - TransactionSum(u.Transaction)) }</div>
			<div class="stat-desc">Out of { fmt.Sprintf("%.2f",u.Budget.Value) }</div>
		</div>
	</div>
}

templ TransactionList(tr []aggregate.Transaction) {
	<div class="overflow-x-auto">
		<table class="table">
			<!-- head -->
			<thead>
				<tr>
					<th></th>
					<th>Transaction Type</th>
					<th>Cost</th>
					<th>Category</th>
				</tr>
			</thead>
			<tbody>
				for i, t := range tr {
					if t.Transaction.TransactionType == transaction.Expense {
						<tr class={ "bg-error",templ.KV((t.Transaction.TransactionType == transaction.Expense), "bg-primary"), templ.KV(string(t.Transaction.TransactionType) == "expense", "bg-white") }>
							<th>{ string(i) }</th>
							<td>{ fmt.Sprintf("%s",t.Transaction.TransactionType) }</td>
							<td>{ fmt.Sprintf("%s %.2f",t.Transaction.Currency, t.Transaction.Value) }</td>
							<td>{ fmt.Sprintf("%s", t.Category.Name) }</td>
						</tr>
					} else {
						<tr class={ "bg-success",templ.KV((t.Transaction.TransactionType == transaction.Expense), "bg-primary"), templ.KV(string(t.Transaction.TransactionType) == "expense", "bg-white") }>
							<th>{ string(i) }</th>
							<td>{ fmt.Sprintf("%s",t.Transaction.TransactionType) }</td>
							<td>{ fmt.Sprintf("%s %.2f",t.Transaction.Currency, t.Transaction.Value) }</td>
							<td>{ fmt.Sprintf("%s", t.Category.Name) }</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
}

templ UserHome(u model.UserAggregate) {
	if u.Budget == nil {
		@forms.BudgetFrom(u.User.ID)
	} else {
		<div class="flex justify-between items-center">
			@UserBudgetStat(u)
			@forms.TransactionForm(u.User.ID, u.Category)
		</div>
		@TransactionList(u.Transaction)
	}
}
